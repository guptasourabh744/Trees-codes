class Solution {
public:

    
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int, map<int, multiset<int>>> mpp;
        queue<pair<TreeNode*, pair<int,int>>> q; 

        q.push({root, {0, 0}});


        while( !q.empty()) {
            auto it = q.front();
            q.pop();

            TreeNode* node = it.first;
            int x = it.second.first;
            int y = it.second.second;

            mpp[x][y].insert(node->val);

            if(node->left) {
                q.push({node->left, {x-1, y+1}});
            }

            if(node->right) {
                q.push({node->right, {x+1, y+1}});
            }

            
        }

        vector<vector<int>> ans;

            for(auto p : mpp) {
                vector<int> level;

                for(auto q : p.second) {

                    level.insert(level.end(), q.second.begin(), q.second.end());

                }

                ans.push_back(level);
            }

        return ans;
    }
};
